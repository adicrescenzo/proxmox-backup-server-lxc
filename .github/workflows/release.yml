---
name: Release Collection to Galaxy

'on':
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.0.0)'
        required: true
        default: '1.0.0'

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      pull-requests: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Ansible and dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ansible-core>=2.12
          pip install ansible

      - name: Install collection dependencies
        run: |
          ansible-galaxy collection install community.general

      - name: Validate collection structure
        run: |
          ansible-galaxy collection build --force
          ls -la *.tar.gz

      - name: Get version from tag or input
        id: version
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
          fi

      - name: Update galaxy.yml version
        run: |
          sed -i "s/version: .*/version: ${{ steps.version.outputs.VERSION }}/" galaxy.yml
          echo "Updated version to ${{ steps.version.outputs.VERSION }}"
          grep "version:" galaxy.yml

      - name: Build collection
        run: |
          ansible-galaxy collection build --force
          echo "Built collection:"
          ls -la *.tar.gz

      - name: Publish to Ansible Galaxy
        env:
          ANSIBLE_GALAXY_API_KEY: ${{ secrets.GALAXY_API_TOKEN }}
        run: |
          ansible-galaxy collection publish *.tar.gz --api-key $ANSIBLE_GALAXY_API_KEY

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ steps.version.outputs.VERSION }}
          body: |
            ## Changes in version ${{ steps.version.outputs.VERSION }}

            ### Features
            - Automated Proxmox Backup Server deployment in LXC containers
            - Support for both Community and Enterprise editions
            - NFS storage mount configuration
            - TLS certificate management
            - Complete infrastructure as code solution

            ### Installation
            ```bash
            ansible-galaxy collection install \
              adicrescenzo.proxmox_backup_server_lxc:${{ steps.version.outputs.VERSION }}
            ```

            See the [README](https://github.com/adicrescenzo/proxmox-backup-server-lxc/blob/main/README.md) for usage instructions.
            ```

            See the [README](https://github.com/adicrescenzo/proxmox-backup-server-lxc/blob/main/README.md) for detailed usage instructions.
          draft: false
          prerelease: false

      - name: Upload collection artifact to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./adicrescenzo-proxmox_backup_server_lxc-${{ steps.version.outputs.VERSION }}.tar.gz
          asset_name: adicrescenzo-proxmox_backup_server_lxc-${{ steps.version.outputs.VERSION }}.tar.gz
          asset_content_type: application/gzip
